name: AppFlutter

on:
  push:
    branches: ["develop"]
  workflow_dispatch:

jobs:
  Teste:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v1

    - name: Teste com SonarQube
      run: echo "Aqui irá as intruções do teste do código"

  Build:
    needs: Teste
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Setup Flutter
      uses: subosito/flutter-action@v1
      with:
        channel: "stable"

    - name: Install dependencies
      run: flutter pub get

    - name: Build_Web
      id: build_web
      run: flutter build web
      continue-on-error: true

    - name: Build_Android
      run: echo "Aqui vão as instrução do .apk depois dos testes"

  Notification:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Notify Success
      if: success() && needs.build.result == 'success' && needs.build.outputs.Build_Android == 'success' && needs.build.outputs.build_web == 'success'
      run: sh ./autoleitura/.scripts/notificationSuccess.sh

    - name: Notify Failure
      if: failure() && (needs.build.result == 'failure' || needs.build.outputs.Build_Android == 'failure' || needs.build.outputs.build_web == 'failure')
      run: sh ./autoleitura/.scripts/notificationFailure.sh

  Deploy:
    needs: Notification
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v1

    - name: Instalar SendEmail
      run: sudo apt install sendemail

    - name: Enviar Email com .apk
      run: sh ./autoleitura/.scripts/sendMail.sh



