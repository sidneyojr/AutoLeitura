name: AppFlutter

on:
  push:
    tags:
    - "internal-v*.*.*"
    branches: ["develop"]
  workflow_dispatch:


jobs:
  Teste:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Flutter
      uses: subosito/flutter-action@v1
      with:
        channel: "stable"
        flutter-version: "3.13.8"

    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: '12.x'

    - name: Setup Dart Dev Test
      run: dart pub add --dev test

    - name: Install dependencies
      run: flutter pub get

    - name: Analyze
      run: flutter analyze

    - name: Format Test lib/
      run: dart format ./lib

    - name: Format Test test/
      run: dart format ./test

    - name: Run Test
      run: flutter test --coverage --verbose

    - name: Minimum Test Coverage Percentage
      uses: VeryGoodOpenSource/very_good_coverage@v1.1.1
      with:
        min_coverage: 0

    - name: Upload Coverage Reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  Build:
    needs: Teste
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: "12.x"

    - name: Setup Flutter
      uses: subosito/flutter-action@v1
      with:
        channel: "stable"
        flutter-version: "3.13.8"

    - name: Install dependencies
      run: flutter pub get

    - name: Build Android
      #- name: Build Web
      # id: build_web
      #run: flutter build web
      #continue-on-error: true

      id: build_android
      run: flutter build apk

    - name: Save APK to Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: APK-AUTOLEITURA
        path: build/app/outputs/apk/release/app-release.apk
      continue-on-error: true

  Deploy:
    needs: Build
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup SendEmail
      run: sudo apt install sendemail openssl perl libio-socket-inet6-perl libio-socket-ssl-perl libnet-ssleay-perl


    - name: Get APK from Artifacts
      uses: actions/download-artifact@v3
      with:
        name: APK-AUTOLEITURA
        path: build/app/outputs/apk/release/app-release.apk
        release-file: app-release.apk

        
    - run: ls -lha build/app/outputs/apk/release/
    - run: ls -lha /home/runner/work/AutoLeitura/AutoLeitura/build/app/outputs/apk/release/
    - run: cp -r /home/runner/work/AutoLeitura/AutoLeitura/build/app/outputs/apk/release/app-release.apk ./.deploy_homol/
    - run: cd ./.deploy_homol
    - run: ls -lha ./.deploy_homol
    #- run: sh ./.scripts/sendMail.sh
    #- name: Send Email add .apk

    - name: Send mailer
      uses: devellany/send-mail@v1.0.2
      with:
    # Enter SMTP host.
        host: smtp.zoho.com
    # Enter SMTP port. (defaults to 465)
        port: 587 # optional, default is 465
    # Enter SMTP host account.
        account: ${{secrets.MAIL_USERNAME}}
    # Enter SMTP host account password.
        password: ${{secrets.MAIL_PASSWORD}}
    # Enter sender name.
        sender: Sidney
    # Enter sender mail.
        from: ${{secrets.MAIL_USERNAME}}
    # Enter recipient emails and separated with 'comma'. (The prefix 'file://' if you want to read a file)
        to: sidneyoliveirajunior@gmail.com
    # Enter the subject of the mail. (The prefix 'file://' if you want to read a file)
        subject: Nova vers√£o Teste
    # Enter the body of the mail. (The prefix 'file://' if you want to read a file)
        body: file://./.deploy_homol/autoleitura.html
    # Enter Content-Type HTTP header. (defaults to 'text/plain')
        contentType: html # optional, default is text/plain
    # Attachment files are entered as an array. Required key 'path'. (The prefix 'file://' if you want to read a file)
       #attachments: # optional    

      



